#!/bin/bash

gcc -std=c2x ../main.c ../tokenizer.c -o ./generator
./generator ./cond_dflt_impl_err.ned 2>&1 | grep -q "default implementation notation is not valid at the condition level"
err1=$?

gcc -std=c2x ../main.c ../tokenizer.c -o ./generator
./generator ./cond_dflt_impl_err2.ned 2>&1 | grep -q "default implementation notation is not valid at the condition level"
err2=$?

gcc -std=c2x ../main.c ../tokenizer.c -o ./generator
./generator ./cond_dflt_impl_err3.ned 2>&1 | grep -q "default implementation notation is not valid at the condition level"
err3=$?

gcc -std=c2x ../main.c ../tokenizer.c -o ./generator
./generator ./cond_dflt_impl_err4.ned 2>&1 | grep -q "default implementation notation is not valid at the condition level"
err4=$?

err=$((err1+err2+err3+err4))

gcc -std=c2x ../main.c ../tokenizer.c -o ./generator
./generator ./cond_exp_nl.ned 2>&1 | grep -q "expected newline"
err1=$?

gcc -std=c2x ../main.c ../tokenizer.c -o ./generator
./generator ./cond_exp_nl2.ned 2>&1 | grep -q "expected newline"
err2=$?

gcc -std=c2x ../main.c ../tokenizer.c -o ./generator
./generator ./cond_exp_nl3.ned 2>&1 | grep -q "expected newline"
err3=$?

gcc -std=c2x ../main.c ../tokenizer.c -o ./generator
./generator ./cond_exp_nl4.ned 2>&1 | grep -q "expected newline"
err4=$?

err=$((err+err1+err2+err3+err4))
if [[ $err -gt 0 ]]; then
    exit 1;
fi
